{
  "openapi": "3.0.3",
  "info": {
    "title": "NFL Teams API",
    "description": "API for managing NFL teams and retrieving information about them.",
    "version": "1.0.0",
    "contact": {
      "name": "Jan Kuzman",
      "email": "kuzmanjann@gmail.com",
      "url": "https://github.com/jankuzman"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/api/allTeams": {
      "get": {
        "summary": "Get all teams",
        "description": "Retrieve a list of all NFL teams.",
        "responses": {
          "200": {
            "description": "List of teams retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "summary": "Add a new team",
        "description": "Create a new NFL team and add it to the database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTeam"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Team successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/teams/{id}": {
      "get": {
        "summary": "Get team by ID",
        "description": "Retrieve a specific team by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the team.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Team found and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "404": {
            "description": "Team not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "summary": "Update team by ID",
        "description": "Update the details of a specific team.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the team to update.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTeam"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Team successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data."
          },
          "404": {
            "description": "Team not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "summary": "Delete team by ID",
        "description": "Remove a specific team by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the team to delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Team successfully deleted."
          },
          "404": {
            "description": "Team not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/teams/division/{division}": {
      "get": {
        "summary": "Get teams by division",
        "description": "Retrieve all teams in a specific division.",
        "parameters": [
          {
            "name": "division",
            "in": "path",
            "required": true,
            "description": "Division name (e.g., NFC East).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of teams in the specified division.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Division not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "founded": {
            "type": "integer"
          },
          "division": {
            "type": "string"
          },
          "titles": {
            "type": "integer"
          }
        }
      },
      "NewTeam": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "founded": {
            "type": "integer"
          },
          "division": {
            "type": "string"
          },
          "titles": {
            "type": "integer"
          }
        },
        "required": ["name", "city", "division"]
      }
    }
  }
}
